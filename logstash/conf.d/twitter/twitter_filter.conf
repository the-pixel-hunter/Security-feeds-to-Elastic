filter {
  mutate {
     remove_field => ["contributors", "current_user_retweet", "favorited",
     "filter_level", "id", "possibly_sensitive", "quoted_status_id",
     "quoted_status_id_str", "quoted_status", "scopes", "retweeted", "source",
     "truncated", "withheld_copyright", "withheld_in_countries",
     "withheld_scope"]
  }
  if([retweeted_status]) {
     mutate {
        rename => {
           "[retweeted_status][text]" => "[twitter][tweet][text]"
           "[retweeted_status][id_str]" => "[twitter][tweet][original][id]"
           "[retweeted_status][user][id_str]" => "[twitter][author][original][id]"
           "[retweeted_status][user][screen_name]" => "[twitter][author][original][display_name]"
           "[retweeted_status][user][name]" => "[twitter][author][original][name]"
           "[retweeted_status][user][verified]" => "[twitter][author][original][verified]"
           "[retweeted_status][user][followers_count]" => "[twitter][author][original][followers_count]"
           "[retweeted_status][user][friends_count]" => "[twitter][author][original][friends_count]"
           "[retweeted_status][user][protected]" => "[twitter][author][original][protected]"
        }
        add_field => {
           "[twitter][tweet][retweeted]" => true
        }
     }
     date {
        match => ["[retweeted_status][created_at]", "EEE MMM dd HH:mm:ss Z yyyy"]
        target => "[twitter][tweet][original][created]"
     }
     date {
        match => [ "[retweeted_status][user][created_at]", "EEE MMM dd HH:mm:ss Z yyyy" ]
        target => "[twitter][author][original][account_created]"
     }
     ruby {
       code => '
         event.set("[twitter][tweet][retweeted_count]", event.get("[retweeted_status][retweet_count]"))
         event.set("[twitter][tweet][favoriteted_count]", event.get("[retweeted_status][favorite_count]"))
         event.set("[twitter][tweet][coordinates]", event.get("[retweeted_status][coordinates][coordinates]")) if !event.get("[retweeted_status][coordinates][coordinates]").nil?
         event.set("original_reply_to_tweet", event.get("[retweeted_status][in_reply_to_status_id_str]")) if !event.get("[retweeted_status][in_reply_to_status_id_str]").nil?
         event.set("original_reply_to_user_id", event.get("[retweeted_status][in_reply_to_user_id_str]")) if !event.get("[retweeted_status][in_reply_to_user_id_str]").nil?
         event.set("original_reply_to_pseudo", event.get("[retweeted_status][in_reply_to_screen_name]")) if !event.get("[retweeted_status][in_reply_to_screen_name]").nil?
         event.set("original_author_location", event.get("[retweeted_status][user][location]")) if event.get("[retweeted_status][user][location]")
         event.set("original_author_description", event.get("[retweeted_status][user][description]")) if event.get("[retweeted_status][user][description]")
         event.set("original_author_lang", event.get("[retweeted_status][user][lang]")) if event.get("[retweeted_status][user][lang]")
       '
     }
  }
  else if([extended_tweet][full_text]) {
     mutate {
       add_field => {
          "[twitter][tweet][text]" => "%{[extended_tweet][full_text]}"
          "[twitter][tweet][retweeted]" => false
        }
      }
  }
  else{
     mutate {
       add_field => {
          "[twitter][tweet][text]" => "%{text}"
          "[twitter][tweet][retweeted]" => false
       }
     }
  }
  date {
     match => ["[created_at]", "EEE MMM dd HH:mm:ss Z yyyy"]
     target => "[twitter][tweet][date]"
  }
  date {
      match => [ "[user][created_at]", "EEE MMM dd HH:mm:ss Z yyyy" ]
      target => "[twitter][author][account_created]"
  }
  ruby {
    code => '
      hashtags = []
      user_mentions_id = []
      user_mentions_pseudo = []
      urls = []
      event.get("[entities][hashtags]").each do |hashtag|
        hashtags << hashtag["text"].downcase
      end
      event.get("[entities][user_mentions]").each do |user_mention|
        user_mentions_id << user_mention["id_str"]
        user_mentions_pseudo << user_mention["screen_name"]
      end
      event.get("[entities][urls]").each do |url|
        urls << url["expanded_url"]
      end
      event.set("hashtags", hashtags) if hashtags.any?
      event.set("user_mentions_id", user_mentions_id) if user_mentions_id.any?
      event.set("user_mentions_pseudo", user_mentions_pseudo) if user_mentions_pseudo.any?
      event.set("urls", urls) if urls.any?
      event.set("tweet_lang", event.get("[lang]")) if event.get("[lang]")
      event.set("author_location", event.get("[user][location]")) if event.get("[user][location]")
      event.set("author_description", event.get("[user][description]")) if event.get("[user][description]")
      event.set("author_lang", event.get("[user][lang]")) if event.get("[user][lang]")
      event.set("tweet_coordinates", event.get("[coordinates][coordinates]")) if !event.get("[coordinates][coordinates]").nil?
      event.set("reply_to_tweet", event.get("[in_reply_to_status_id_str]")) if !event.get("[in_reply_to_status_id_str]").nil?
      event.set("reply_to_user_id", event.get("[in_reply_to_user_id_str]")) if !event.get("[in_reply_to_user_id_str]").nil?
      event.set("reply_to_pseudo", event.get("[in_reply_to_screen_name]")) if !event.get("[in_reply_to_screen_name]").nil?
    '
  }
  mutate {
     rename => {
       "[id_str]" =>  "[twitter][tweet][id]"
       "[user][id_str]" => "[twitter][author][id]"
       "[user][screen_name]" => "[twitter][author][display_name]"
       "[user][name]" => "[twitter][author][name]"
       "[user][verified]" => "[twitter][author][verified]"
       "[user][followers_count]" => "[twitter][author][followers_count]"
       "[user][friends_count]" => "[twitter][author][friends_count]"
       "[user][protected]" => "[twitter][author][protected]"
       "@timestamp" => "[event][received]"
     }
  }
  # Uncomment if you are using an API that give you a sentiment and a score
  #rest {
  #   request => {
  #       url => "http://localhost:5000/predict"
  #       method => "post"
  #       params => {
  #          "submit" => "%{tweet_content}"
  #       }
  #       headers => { "Content-Type" => "application/json" }
  #   }
  #   target => 'rest'
  #}
  #mutate {
  #   rename => {
  #      "[rest][sentiment]" => "sentiment"
  #      "[rest][score]" => "sentiment_score"
  #  }
  #}

  mutate {
     convert => {
        "[rest][sentiment_score]" => "float"
        "[twitter][author][original][followers_count]" => "integer"
        "[twitter][author][original][friends_count]" => "integer"
        "[twitter][author][followers_count]" => "integer"
        "[twitter][author][friends_count]" => "integer"
     }
  }

  mutate {
    rename => { "author_followers_count" => "[twitter][author][followers_count]" }
    rename => { "author_friends_count" => "[twitter][author][friends_count]" }
    rename => { "author_verified" => "[twitter][author][verified]" }
    rename => { "author_protected" => "[twitter][author][protected]" }
    rename => { "author_id" => "[twitter][author]id]" }
    rename => { "author_pseudo" => "[twitter][author][pseudo_name]" }
    rename => { "author_name" => "[twitter][author][name]" }
    rename => { "author_location" => "[twitter][author][location]" }
    rename => { "author_account_creation" => "[twitter][author][account_created]" }
    rename => { "author_description" => "[twitter][author][description]" }
    rename => { "author_lang" => "[twitter][author][language]" 
                "hashtags" => "[twitter][tweet][hashtags]"
                "tweet_lang" => "[twitter][tweet][language]"
                "urls" => "[twitter][tweet][urls]"
                "retweet_count" => "[twitter][tweet][retweeted_count]" 
                "user_mentions_id" => "[twitter][tweet][mentions][id]"
                "user_mentions_pseudo" => "[twitter][tweet][mentions][pseudo_name]" }
    copy => { "[twitter][tweet][date]" => "@timestamp" }
  }

  if ([original_author_id]) {
    mutate {
      rename => { "original_author_followers_count" => "[original_author][author_followers_count]" }
      rename => { "original_author_friends_count" => "[original_author][author_friends_count]" }
      rename => { "is_original_author_verified" => "[original_author][is_author_verified]" }
      rename => { "is_original_author_protected" => "[original_author][is_author_protected]" }
      rename => { "original_author_id" => "[original_author][author_id]" }
      rename => { "original_author_pseudo" => "[original_author][author_pseudo]" }
      rename => { "original_author_name" => "[original_author][author_name]" }
      rename => { "original_author_location" => "[original_author][author_location]" }
      rename => { "original_author_account_creation" => "[original_author][author_account_creation]" }
      rename => { "original_author_description" => "[original_author][author_description]" }
      rename => { "original_author_lang" => "[original_author][author_language]" }
    }
  }
  if ([retweeted_status][extended][full_text]){
    mutate{
      remove_field => ["[twitter][tweet][text]"]
    }
    mutate{
      rename => { "[retweeted_status][extended][full_text]" => "[twitter][tweet][text]" }
    }
  }
  
    mutate {
        remove_field => ["original_author_followers_count", "original_author_friends_count",
        "is_original_author_verified", "is_original_author_protected", "original_author_id",
        "original_author_pseudo", "original_author_name", "original_author_location",
        "original_author_account_creation", "original_author_description", "original_author_lang",
        "retweeted_status", "truncated", "user", "@version", "timestamp_ms",
        "is_quote_status", "extended_entities", "extended_tweet", "entities", "reply_count",
        "in_reply_to_status_id_str", "place", "display_text_range", "in_reply_to_user_id_str",
        "type", "author_followers_count", "author_friends_count", "quote_count", "reply_to_pseudo",
        "is_author_verified", "is_author_protected", "author_pseudo", "author_name",
        "author_location", "author_account_creation", "author_description", "author_lang",
        "rest", "author_id", "in_reply_to_screen_name", "in_reply_to_status_id",
        "in_reply_to_user_id", "lang", "original_reply_to_pseudo", "original_reply_to_tweet",
        "original_reply_to_user_id", "reply_to_pseudo", "reply_to_tweet", "reply_to_user_id",
        "text", "created_at", "coordinates", "favorite_count", "quoted_status_permalink"]
    }
}
